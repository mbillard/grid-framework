$gf-prefix:       'col' !default;
$gf-row-prefix:   'row' !default;
$gf-gutter-width: 30px !default;

// ------------------------------------------
// Grid framework extendable classes
// ------------------------------------------

%gf-col {
  position: relative;
  // Prevent columns from collapsing when empty
  min-height: 1px;

  .#{$gf-row-prefix}-gutter & {
    // Inner gutter via padding
    padding-left:  ($gf-gutter-width / 2);
    padding-right: ($gf-gutter-width / 2);
  }
}


// ------------------------------------------
// Grid framework mixins
// ------------------------------------------

@mixin common-columns-style($nb-columns-list, $breakpoints) {
  @each $nb-columns in $nb-columns-list {
    @each $bp in $breakpoints {
      $list: ".#{$gf-prefix}-#{$bp}-1-#{$nb-columns}";
      @for $i from 2 through $nb-columns {
        $list: "#{$list}, .#{$gf-prefix}-#{$bp}-#{$i}-#{$nb-columns}"
      }
      #{$list} {
        @extend %gf-col;
      }
    }
  }
}

@mixin float-columns($nb-columns, $bp) {
  $list: ".#{$gf-prefix}-#{$bp}-1-#{$nb-columns}";
  @for $i from 2 through $nb-columns {
    $list: "#{$list}, .#{$gf-prefix}-#{$bp}-#{$i}-#{$nb-columns}";
  }
  #{$list} {
    float: left;
  }
}

@mixin make-column($index, $nb-columns, $bp) {
  .#{$gf-prefix}-#{$bp}-#{$index}-#{$nb-columns} {
    width: percentage($index / $nb-columns);
  }
}

@mixin make-column-offset($index, $nb-columns, $bp) {
  .#{$gf-prefix}-offset-#{$bp}-#{$index}-#{$nb-columns} {
    margin-left: percentage($index / $nb-columns);
  }
}

@mixin make-column-push($index, $nb-columns, $bp) {
  @if ($index == 0) {
    .#{$gf-prefix}-push-#{$bp}-0 {
      left: auto;
    }
  } @else {
    .#{$gf-prefix}-push-#{$bp}-#{$index}-#{$nb-columns} {
      left: percentage($index / $nb-columns);
    }
  }
}

@mixin make-column-pull($index, $nb-columns, $bp) {
  @if ($index == 0) {
    .#{$gf-prefix}-pull-#{$bp}-0 {
      right: auto;
    }
  } @else {
    .#{$gf-prefix}-pull-#{$bp}-#{$index}-#{$nb-columns} {
      right: percentage($index / $nb-columns);
    }
  }
}

@mixin loop-columns($nb-columns, $bp, $options) {
  @for $i from 0 through $nb-columns {
    @if ($i > 0) {
      @include make-column($i, $nb-columns, $bp);
    }

    @each $option in $options {
      @if ($i > 0 and $option == 'offset') {
        @include make-column-offset($i, $nb-columns, $bp)
      }
      @if ($option == 'push') {
        @include make-column-push($i, $nb-columns, $bp)
      }
      @if ($option == 'pull') {
        @include make-column-pull($i, $nb-columns, $bp)
      }
    }
  }
}

// Create grid for specific class
@mixin make-grid($nb-columns-list, $bp, $options: 'offset') {
  @include common-columns-style($nb-columns-list, $bp);

  @each $nb-columns in $nb-columns-list {
    @include float-columns($nb-columns, $bp);
    @include loop-columns($nb-columns, $bp, $options);
  }
}

// Creates a wrapper for a series of columns
@mixin make-rows {
  .#{$gf-row-prefix} {
    // micro clearfix by Nicolas Gallagher
    // http://nicolasgallagher.com/micro-clearfix-hack/
    &:before,
    &:after {
      content: " ";
      display: table;
    }
    &:after {
      clear: both;
    }
  }

  @if ($gf-gutter-width > 0) {
    .#{$gf-row-prefix}-gutter {
      margin-left:  ($gf-gutter-width / -2);
      margin-right: ($gf-gutter-width / -2);
    }
  }
}
